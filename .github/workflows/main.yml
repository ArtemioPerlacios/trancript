name: Transcripción de video con Whisper

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  transcribe-video:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Descargar el código fuente
      - name: Checkout repository
        uses: actions/checkout@v2

      # Paso 2: Configurar Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      # Paso 3: Instalar dependencias necesarias
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg
          python -m pip install --upgrade pip
          pip install yt-dlp git+https://github.com/openai/whisper.git

      # Paso 4: Descargar el video usando yt-dlp
      - name: Download video
        run: yt-dlp -o "video_temp.mp4" "https://app.screencast.com/n3vk4v14s2Gul?conversation=fbz5JkB4BUTUkUYCf9YlOr"

      # Paso 5: Crear script para transcribir
      - name: Create transcription script
        run: |
          echo "import whisper
model = whisper.load_model('base')
result = model.transcribe('video_temp.mp4')
with open('transcription.txt', 'w', encoding='utf-8') as f:
    f.write(result['text'])" > transcribe.py

      # Paso 6: Formatear el archivo para asegurar indentación
      - name: Fix Python indentation
        run: |
          sed -i 's/^    f.write/f.write/' transcribe.py

      # Paso 7: Ejecutar el script para transcribir
      - name: Transcribe video
        run: python transcribe.py

      # Paso 8: Subir el archivo transcrito como artefacto
      - name: Upload transcription
        uses: actions/upload-artifact@v3
        with:
          name: transcription
          path: transcription.txt

      # Paso 9: Limpiar archivos temporales
      - name: Cleanup
        run: rm -f video_temp.mp4 transcription.txt transcribe.py


